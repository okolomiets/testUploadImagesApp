// Generated by CoffeeScript 1.7.1
(function() {
  var fs, list, util;

  util = require("util");

  fs = require("fs");

  list = [];

  exports.imageForm = function(req, res) {
    res.render("upload", {
      list: list
    });
  };

  exports.uploadImage = function(req, res, next) {
    var fixDate, modidied, now, object, pathArray;
    if (!(req.files.image.size === 0 || req.body.title === '')) {
      pathArray = req.files.image.path.split("/");
      now = new Date();
      fixDate = function(d) {
        if (d < 10) {
          return "0" + d;
        } else {
          return d;
        }
      };
      modidied = fixDate(now.getDate()) + '/' + fixDate(now.getMonth() + 1) + '/' + now.getFullYear() + ' ' + fixDate(now.getHours()) + ':' + fixDate(now.getMinutes());
      object = {
        full_path: req.files.image.path,
        path: "images/" + pathArray[pathArray.length - 1],
        title: req.body.title,
        size: req.files.image.size / 1024 | 0,
        modified: modidied
      };
      list.push(object);
    }
    res.render("upload", {
      list: list
    });
  };

  exports.getImage = function(req, res) {
    var id, record;
    id = req.params.id;
    record = list[id - 1];
    res.render("record", {
      id: id,
      object: record
    });
  };

  exports.deleteImage = function(req, res) {
    var full_path, id;
    id = req.params.id - 1;
    full_path = list[id].full_path;
    fs.unlink(full_path, function(err) {
      if (err) {
        throw err;
      }
      console.log("successfully deleted " + full_path);
    });
    list.splice(id, 1);
    res.redirect("/upload");
  };

}).call(this);

//# sourceMappingURL=common.map
